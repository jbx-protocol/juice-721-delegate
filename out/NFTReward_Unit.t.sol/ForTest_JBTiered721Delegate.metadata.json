{
  "compiler": {
    "version": "0.8.16+commit.07a7930e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "contract IJBDirectory",
            "name": "_directory",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "_name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "_symbol",
            "type": "string"
          },
          {
            "internalType": "contract IJBFundingCycleStore",
            "name": "_fundingCycleStore",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "_baseUri",
            "type": "string"
          },
          {
            "internalType": "contract IJBTokenUriResolver",
            "name": "_tokenUriResolver",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "_contractUri",
            "type": "string"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "contributionFloor",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "lockedUntil",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "initialQuantity",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "votingUnits",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "reservedTokenBeneficiary",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "encodedIPFSUri",
                "type": "bytes32"
              },
              {
                "internalType": "bool",
                "name": "shouldUseBeneficiaryAsDefault",
                "type": "bool"
              }
            ],
            "internalType": "struct JB721TierParams[]",
            "name": "_tiers",
            "type": "tuple[]"
          },
          {
            "internalType": "contract IJBTiered721DelegateStore",
            "name": "_test_store",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "bool",
                "name": "lockReservedTokenChanges",
                "type": "bool"
              },
              {
                "internalType": "bool",
                "name": "lockVotingUnitChanges",
                "type": "bool"
              }
            ],
            "internalType": "struct JBTiered721Flags",
            "name": "_flags",
            "type": "tuple"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "ALEADY_MINTED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "APPROVAL_TO_CURRENT_OWNER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "APPROVE_TO_CALLER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "BLOCK_NOT_YET_MINED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "CALLER_NOT_OWNER_OR_APPROVED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INCORRECT_OWNER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_PAYMENT_EVENT",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_REDEMPTION_EVENT",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_TOKEN_ID",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "MINT_TO_ZERO",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NOT_AVAILABLE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OVERSPENDING",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "prod1",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "denominator",
            "type": "uint256"
          }
        ],
        "name": "PRBMath__MulDivOverflow",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "RESERVED_TOKEN_MINTING_PAUSED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "SIGNATURE_EXPIRED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "TRANSFERS_PAUSED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "TRANSFER_TO_NON_IMPLEMENTER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "TRANSFER_TO_ZERO_ADDRESS",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "UNAUTHORIZED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "UNEXPECTED_TOKEN_REDEEMED",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tierId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "contributionFloor",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "lockedUntil",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "initialQuantity",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "votingUnits",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "reservedTokenBeneficiary",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "encodedIPFSUri",
                "type": "bytes32"
              },
              {
                "internalType": "bool",
                "name": "shouldUseBeneficiaryAsDefault",
                "type": "bool"
              }
            ],
            "indexed": false,
            "internalType": "struct JB721TierParams",
            "name": "data",
            "type": "tuple"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "AddTier",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "approved",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "approved",
            "type": "bool"
          }
        ],
        "name": "ApprovalForAll",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "delegator",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "fromDelegate",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "toDelegate",
            "type": "address"
          }
        ],
        "name": "DelegateChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "delegate",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "previousBalance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "newBalance",
            "type": "uint256"
          }
        ],
        "name": "DelegateVotesChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tierId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "beneficiary",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "totalAmountContributed",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "Mint",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tierId",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "beneficiary",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "MintReservedToken",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tierId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "RemoveTier",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "string",
            "name": "baseUri",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "SetBaseUri",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "string",
            "name": "contractUri",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "SetContractUri",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "beneficiary",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "SetDefaultReservedTokenBeneficiary",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "contract IJBTokenUriResolver",
            "name": "newResolver",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "SetTokenUriResolver",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "delegator",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "fromDelegate",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "toDelegate",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "tierId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "TierDelegateChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "delegate",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tierId",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "previousBalance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "newBalance",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "callre",
            "type": "address"
          }
        ],
        "name": "TierDelegateVotesChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "DOMAIN_SEPARATOR",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "ForTest_setOwnerOf",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "contributionFloor",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "lockedUntil",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "initialQuantity",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "votingUnits",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "reservedTokenBeneficiary",
                "type": "address"
              },
              {
                "internalType": "bytes32",
                "name": "encodedIPFSUri",
                "type": "bytes32"
              },
              {
                "internalType": "bool",
                "name": "shouldUseBeneficiaryAsDefault",
                "type": "bool"
              }
            ],
            "internalType": "struct JB721TierParams[]",
            "name": "_tiersToAdd",
            "type": "tuple[]"
          },
          {
            "internalType": "uint256[]",
            "name": "_tierIdsToRemove",
            "type": "uint256[]"
          }
        ],
        "name": "adjustTiers",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "balance",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "contractURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "contributionToken",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegatee",
            "type": "address"
          }
        ],
        "name": "delegate",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegatee",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "expiry",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "v",
            "type": "uint8"
          },
          {
            "internalType": "bytes32",
            "name": "r",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "name": "delegateBySig",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "delegates",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "payer",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "amount",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "forwardedAmount",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "projectTokenCount",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "beneficiary",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "preferClaimedTokens",
                "type": "bool"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBDidPayData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "didPay",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "holder",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "projectTokenCount",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "reclaimedAmount",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "forwardedAmount",
                "type": "tuple"
              },
              {
                "internalType": "address payable",
                "name": "beneficiary",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBDidRedeemData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "didRedeem",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "directory",
        "outputs": [
          {
            "internalType": "contract IJBDirectory",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "firstOwnerOf",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "fundingCycleStore",
        "outputs": [
          {
            "internalType": "contract IJBFundingCycleStore",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "getApproved",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tier",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_blockNumber",
            "type": "uint256"
          }
        ],
        "name": "getPastTierTotalVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tier",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_blockNumber",
            "type": "uint256"
          }
        ],
        "name": "getPastTierVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "blockNumber",
            "type": "uint256"
          }
        ],
        "name": "getPastTotalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "blockNumber",
            "type": "uint256"
          }
        ],
        "name": "getPastVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tier",
            "type": "uint256"
          }
        ],
        "name": "getTierDelegate",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tier",
            "type": "uint256"
          }
        ],
        "name": "getTierTotalVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tier",
            "type": "uint256"
          }
        ],
        "name": "getTierVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "getVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          }
        ],
        "name": "isApprovedForAll",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "tierId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "count",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBTiered721MintReservesForTiersData[]",
            "name": "_mintReservesForTiersData",
            "type": "tuple[]"
          }
        ],
        "name": "mintReservesFor",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "name": "nonces",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "ownerOf",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "payer",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "amount",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "beneficiary",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBPayParamsData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "payParams",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "weight",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "components": [
              {
                "internalType": "contract IJBPayDelegate",
                "name": "delegate",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBPayDelegateAllocation[]",
            "name": "delegateAllocations",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "projectId",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "holder",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tokenCount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "totalSupply",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflow",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "reclaimAmount",
                "type": "tuple"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflow",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBRedeemParamsData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "redeemParams",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "reclaimAmount",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "components": [
              {
                "internalType": "contract IJBRedemptionDelegate",
                "name": "delegate",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBRedemptionDelegateAllocation[]",
            "name": "delegateAllocations",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool"
          }
        ],
        "name": "setApprovalForAll",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_baseUri",
            "type": "string"
          }
        ],
        "name": "setBaseUri",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_contractUri",
            "type": "string"
          }
        ],
        "name": "setContractUri",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_beneficiary",
            "type": "address"
          }
        ],
        "name": "setDefaultReservedTokenBeneficiary",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_delegatee",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_tierId",
            "type": "uint256"
          }
        ],
        "name": "setTierDelegate",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract IJBTokenUriResolver",
            "name": "_tokenUriResolver",
            "type": "address"
          }
        ],
        "name": "setTokenUriResolver",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "store",
        "outputs": [
          {
            "internalType": "contract IJBTiered721DelegateStore",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "_interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "test_store",
        "outputs": [
          {
            "internalType": "contract IJBTiered721DelegateStore_ForTest",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "tokenURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "DOMAIN_SEPARATOR()": {
          "details": "Returns the contract's {EIP712} domain separator."
        },
        "adjustTiers((uint256,uint256,uint256,uint256,uint256,address,bytes32,bool)[],uint256[])": {
          "details": "Only the contract's owner can adjust the tiers.",
          "params": {
            "_tierIdsToRemove": "An array of tier IDs to remove.",
            "_tiersToAdd": "An array of tier data to add."
          }
        },
        "approve(address,uint256)": {
          "details": "See {IERC721-approve}."
        },
        "balanceOf(address)": {
          "params": {
            "_owner": "The address to check the balance of."
          },
          "returns": {
            "balance": "The number of tokens owners by the owner accross all tiers."
          }
        },
        "contractURI()": {
          "returns": {
            "_0": "The contract's metadata URI."
          }
        },
        "delegate(address)": {
          "details": "Delegates votes from the sender to `delegatee`."
        },
        "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
          "details": "Delegates votes from signer to `delegatee`."
        },
        "delegates(address)": {
          "details": "Returns the delegate that `account` has chosen."
        },
        "didPay((address,uint256,uint256,(address,uint256,uint256,uint256),(address,uint256,uint256,uint256),uint256,address,bool,string,bytes))": {
          "details": " This function will revert if the contract calling is not one of the project's terminals. ",
          "params": {
            "_data": "The Juicebox standard project payment data."
          }
        },
        "didRedeem((address,uint256,uint256,uint256,(address,uint256,uint256,uint256),(address,uint256,uint256,uint256),address,string,bytes))": {
          "details": "This function will revert if the contract calling is not one of the project's terminals.",
          "params": {
            "_data": "The Juicebox standard project redemption data."
          }
        },
        "firstOwnerOf(uint256)": {
          "params": {
            "_tokenId": "The ID of the token to get the first owner of."
          },
          "returns": {
            "_0": "The first owner of the token."
          }
        },
        "getApproved(uint256)": {
          "details": "See {IERC721-getApproved}."
        },
        "getPastTierTotalVotes(uint256,uint256)": {
          "params": {
            "_blockNumber": "The blocknumber to check the total voting power at.",
            "_tier": "The tier to check."
          }
        },
        "getPastTierVotes(address,uint256,uint256)": {
          "params": {
            "_account": "The address to check.",
            "_blockNumber": "the blocknumber to check the voting power at.",
            "_tier": "The tier to check within."
          }
        },
        "getPastTotalSupply(uint256)": {
          "details": "Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote. Requirements: - `blockNumber` must have been already mined"
        },
        "getPastVotes(address,uint256)": {
          "details": "Returns the amount of votes that `account` had at the end of a past block (`blockNumber`). Requirements: - `blockNumber` must have been already mined"
        },
        "getTierDelegate(address,uint256)": {
          "params": {
            "_account": "The account to check for a delegate of.",
            "_tier": "the tier to check within."
          }
        },
        "getTierTotalVotes(uint256)": {
          "params": {
            "_tier": "The tier to check."
          }
        },
        "getTierVotes(address,uint256)": {
          "params": {
            "_account": "The address to check.",
            "_tier": "The tier to check within."
          }
        },
        "getVotes(address)": {
          "details": "Returns the current amount of votes that `account` has."
        },
        "isApprovedForAll(address,address)": {
          "details": "See {IERC721-isApprovedForAll}."
        },
        "mintReservesFor((uint256,uint256)[])": {
          "params": {
            "_mintReservesForTiersData": "Contains information about how many reserved tokens to mint for each tier."
          }
        },
        "name()": {
          "details": "See {IERC721Metadata-name}."
        },
        "nonces(address)": {
          "details": "Returns an address nonce."
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "ownerOf(uint256)": {
          "details": "See {IERC721-ownerOf}."
        },
        "payParams((address,address,(address,uint256,uint256,uint256),uint256,uint256,address,uint256,uint256,string,bytes))": {
          "params": {
            "_data": "The Juicebox standard project payment data."
          },
          "returns": {
            "delegateAllocations": "The amount to send to delegates instead of adding to the local balance.",
            "memo": "The memo that should be forwarded to the event.",
            "weight": "The weight that tokens should get minted in accordance with."
          }
        },
        "redeemParams((address,address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint256),bool,uint256,string,bytes))": {
          "params": {
            "_data": "The Juicebox standard project redemption data."
          },
          "returns": {
            "delegateAllocations": "The amount to send to delegates instead of adding to the beneficiary.",
            "memo": "The memo that should be forwarded to the event.",
            "reclaimAmount": "The amount that should be reclaimed from the treasury."
          }
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "safeTransferFrom(address,address,uint256)": {
          "details": "See {IERC721-safeTransferFrom}."
        },
        "safeTransferFrom(address,address,uint256,bytes)": {
          "details": "See {IERC721-safeTransferFrom}."
        },
        "setApprovalForAll(address,bool)": {
          "details": "See {IERC721-setApprovalForAll}."
        },
        "setBaseUri(string)": {
          "details": "Only the contract's owner can set the base URI.",
          "params": {
            "_baseUri": "The new base URI."
          }
        },
        "setContractUri(string)": {
          "details": "Only the contract's owner can set the contract URI.",
          "params": {
            "_contractUri": "The new contract URI."
          }
        },
        "setDefaultReservedTokenBeneficiary(address)": {
          "details": "Only the contract's owner can set the default reserved token beneficiary.",
          "params": {
            "_beneficiary": "The default beneificiary of the reserved tokens."
          }
        },
        "setTierDelegate(address,uint256)": {
          "params": {
            "_delegatee": "The account to delegate tier voting units to.",
            "_tierId": "The ID of the tier to delegate voting units for."
          }
        },
        "setTokenUriResolver(address)": {
          "details": "Only the contract's owner can set the token URI resolver.",
          "params": {
            "_tokenUriResolver": "The new base URI."
          }
        },
        "supportsInterface(bytes4)": {
          "details": "See {IERC165-supportsInterface}.",
          "params": {
            "_interfaceId": "The ID of the interface to check for adherance to."
          }
        },
        "symbol()": {
          "details": "See {IERC721Metadata-symbol}."
        },
        "tokenURI(uint256)": {
          "details": "Defer to the tokenUriResolver if set, otherwise, use the tokenUri set with the token's tier.",
          "params": {
            "_tokenId": "The ID of the token to get the tier URI for. "
          },
          "returns": {
            "_0": "The token URI corresponding with the tier or the tokenUriResolver URI."
          }
        },
        "transferFrom(address,address,uint256)": {
          "details": "See {IERC721-transferFrom}."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        }
      },
      "version": 1
    },
    "userdoc": {
      "errors": {
        "PRBMath__MulDivOverflow(uint256,uint256)": [
          {
            "notice": "Emitted when the result overflows uint256."
          }
        ]
      },
      "kind": "user",
      "methods": {
        "adjustTiers((uint256,uint256,uint256,uint256,uint256,address,bytes32,bool)[],uint256[])": {
          "notice": "Adjust the tiers mintable through this contract, adhering to any locked tier constraints. "
        },
        "balanceOf(address)": {
          "notice": " The total number of tokens owned by the given owner across all tiers. "
        },
        "contractURI()": {
          "notice": "Returns the URI where contract metadata can be found. "
        },
        "contributionToken()": {
          "notice": "The token that is accepted when minting NFTs. "
        },
        "didPay((address,uint256,uint256,(address,uint256,uint256,uint256),(address,uint256,uint256,uint256),uint256,address,bool,string,bytes))": {
          "notice": " Part of IJBPayDelegate, this function gets called when the project receives a payment. It will mint an NFT to the contributor (_data.beneficiary) if conditions are met."
        },
        "didRedeem((address,uint256,uint256,uint256,(address,uint256,uint256,uint256),(address,uint256,uint256,uint256),address,string,bytes))": {
          "notice": "Part of IJBRedeemDelegate, this function gets called when the token holder redeems. It will burn the specified NFTs to reclaim from the treasury to the _data.beneficiary."
        },
        "directory()": {
          "notice": "The directory of terminals and controllers for projects."
        },
        "firstOwnerOf(uint256)": {
          "notice": "The first owner of each token ID, which corresponds to the address that originally contributed to the project to receive the NFT."
        },
        "fundingCycleStore()": {
          "notice": "The contract storing all funding cycle configurations."
        },
        "getPastTierTotalVotes(uint256,uint256)": {
          "notice": "Returns the total amount of voting power that exists for a tier."
        },
        "getPastTierVotes(address,uint256,uint256)": {
          "notice": "Returns the past voting power of a specific address for a specific tier."
        },
        "getTierDelegate(address,uint256)": {
          "notice": "Returns the delegate of an account for specific tier."
        },
        "getTierTotalVotes(uint256)": {
          "notice": "Returns the total amount of voting power that exists for a tier."
        },
        "getTierVotes(address,uint256)": {
          "notice": "Returns the current voting power of an address for a specific tier."
        },
        "mintReservesFor((uint256,uint256)[])": {
          "notice": "Mint reserved tokens within the tier for the provided value."
        },
        "payParams((address,address,(address,uint256,uint256,uint256),uint256,uint256,address,uint256,uint256,string,bytes))": {
          "notice": " Part of IJBFundingCycleDataSource, this function gets called when the project receives a payment. It will set itself as the delegate to get a callback from the terminal."
        },
        "projectId()": {
          "notice": "The ID of the project this contract's functionality applies to."
        },
        "redeemParams((address,address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint256),bool,uint256,string,bytes))": {
          "notice": " Part of IJBFundingCycleDataSource, this function gets called when a project's token holders redeem."
        },
        "setBaseUri(string)": {
          "notice": "Set a base token URI."
        },
        "setContractUri(string)": {
          "notice": "Set a contract metadata URI to contain opensea-style metadata."
        },
        "setDefaultReservedTokenBeneficiary(address)": {
          "notice": "Sets the beneificiary of the reserved tokens for tiers where a specific beneficiary isn't set. "
        },
        "setTierDelegate(address,uint256)": {
          "notice": " Delegates votes from the sender to `delegatee`."
        },
        "setTokenUriResolver(address)": {
          "notice": "Set a token URI resolver."
        },
        "store()": {
          "notice": "The contract that stores and manages the NFT's data."
        },
        "supportsInterface(bytes4)": {
          "notice": "Indicates if this contract adheres to the specified interface."
        },
        "tokenURI(uint256)": {
          "notice": "The metadata URI of the provided token ID."
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/forge-test/NFTReward_Unit.t.sol": "ForTest_JBTiered721Delegate"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@jbx-protocol/=node_modules/@jbx-protocol/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":@paulrberg/=node_modules/@paulrberg/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":prb-math/=node_modules/prb-math/"
    ]
  },
  "sources": {
    "contracts/JBTiered721Delegate.sol": {
      "keccak256": "0xda37ff59943159b609f5f29370321e43cfa6e5bb4d29fc31feaf35fc3f30ed45",
      "license": "MIT",
      "urls": [
        "bzz-raw://dee2dc98ecc70c636e8be9caca69ca038ce15eed13a3332081d8fa33c023e9bc",
        "dweb:/ipfs/QmRsRAr5Shc5gVeTcP4vQHNC5MhZcJ5DLMcZRt8fg9fJty"
      ]
    },
    "contracts/JBTiered721DelegateStore.sol": {
      "keccak256": "0x87c7d72047ed3e6dc0d21eb3fbe40c68a95ccb06b83352fd6936cd63a3c7bec9",
      "license": "MIT",
      "urls": [
        "bzz-raw://4982af4306c11ec92645a55d015edd8e754d39d7d0d29bd1479e822ebfadb280",
        "dweb:/ipfs/QmS72yeAPezfZVTistTNUmfhwfFgdbRBMxTMN8JjzVLRLs"
      ]
    },
    "contracts/abstract/ERC721.sol": {
      "keccak256": "0x7c3bd426c3d3231e132dd6ef18b77960bc9aeb2ceccd5f865d7b5c9161b68fc2",
      "license": "MIT",
      "urls": [
        "bzz-raw://8876d2b38d252904ace361e265d67219e214eccf575edf04f7d71f4981db3d1c",
        "dweb:/ipfs/QmVkBEmvNPsxbxp4pAjFeKceu1E7xCHoGZgaeyt5yVHNXU"
      ]
    },
    "contracts/abstract/JB721Delegate.sol": {
      "keccak256": "0xe4a1cbacbeceecd4b712f6f0667822f073bcfb2ed65d8ab7213220891d21e433",
      "license": "MIT",
      "urls": [
        "bzz-raw://9e4ba588fc4964e647628cecb390be6a267be96b48cd112af2cc120e1f67145f",
        "dweb:/ipfs/QmWTsVDyJx8g4RfgYwd5R9wsGYLqCaibUR5ULT78FEi8yn"
      ]
    },
    "contracts/abstract/Votes.sol": {
      "keccak256": "0xe11b2ce9aa853e6cc5e2ea4935ec7b08b6ec2396c69a2f48665468bf38a56c7c",
      "license": "MIT",
      "urls": [
        "bzz-raw://f9fa85127e9056e24d64317c73dba642631fbef048ab129952afc25eb02e7462",
        "dweb:/ipfs/QmWehKcxNZhqypZgTGj7EzUHB6q3m6cydQNX3wvBtbjy9R"
      ]
    },
    "contracts/forge-test/NFTReward_Unit.t.sol": {
      "keccak256": "0x8d56488204970046cfa334b34c1c58a1642c5626e69e5738cdf5ab84716c8600",
      "urls": [
        "bzz-raw://ceda73f04065d5d377ae7ba993524a85f9748ec774f0469e4566a9bef59b4b82",
        "dweb:/ipfs/QmWhwf3TJgAsaAozhdDqNeewzfUuE5E3vdbnFqoRsXB9R3"
      ]
    },
    "contracts/forge-test/utils/AccessJBLib.sol": {
      "keccak256": "0xda36e747df10cd74d3c5b1410423dd2845927bf66bf41251922240d44a729bf6",
      "license": "MIT",
      "urls": [
        "bzz-raw://3ca81dd775a90661f3ef26ced02114388cfab879cdf05787b53cefe3b6d9a778",
        "dweb:/ipfs/QmfSyu1pASER9KzWfF2S83g5ZvUj4A7PhVf2sxZ2q8JBxV"
      ]
    },
    "contracts/interfaces/IJB721Delegate.sol": {
      "keccak256": "0x249735bc13415aff65c41c9fa87c7e924c3f61baaf8c04149e6bbbd939adfd91",
      "license": "MIT",
      "urls": [
        "bzz-raw://3ff88736985917aab2a6b0ce2b17498f33307f1f1814c8695a2a542ca21efb3d",
        "dweb:/ipfs/QmeLwCmX32k8CYdCuz9sZLW5t6AS3mJgvsMUuX2qN5WznR"
      ]
    },
    "contracts/interfaces/IJBTiered721Delegate.sol": {
      "keccak256": "0xac1b60b2a4181aff80a66a47a5ec00239c383988a26cee7563f118f25a6f2e20",
      "license": "MIT",
      "urls": [
        "bzz-raw://f93b49425cec043366b6bcceb375c44baa90291e6eefd3a55f24ffcf68068a5e",
        "dweb:/ipfs/QmX4JdFvpxxQoGu3AR5wtZboSZaAWur2ffbTMeh4dPL3o9"
      ]
    },
    "contracts/interfaces/IJBTiered721DelegateStore.sol": {
      "keccak256": "0x69245adbf81915e7872b68eb6ad86d9f0d26a58cf99c6517bb9ceb1da67f12ff",
      "license": "MIT",
      "urls": [
        "bzz-raw://3f74cc560baaa2dcb5f339b3ba047077f70eab9d029dd34089e49256b36eb6ed",
        "dweb:/ipfs/QmfZhnU4F9EdgiUtg32aBJszsy9yNhDSuJxK2g5Dxca1V5"
      ]
    },
    "contracts/libraries/JBIpfsDecoder.sol": {
      "keccak256": "0xe0db553061ceeedd510e024dd9cc50ab19d6a0009519ec169bc6cb5151a372cd",
      "license": "MIT",
      "urls": [
        "bzz-raw://d912a0e0a5b389d688d6938f037076f69ab71eb5c1b69681b472e80ba197aa7b",
        "dweb:/ipfs/QmXUTTYZaSso7nbbUmKhStuuxEuXW2GUEYT1thxREgTN33"
      ]
    },
    "contracts/libraries/JBTiered721FundingCycleMetadataResolver.sol": {
      "keccak256": "0xe60ca18300e394ee6bdd6904a78d0c4586bb1f392f10ea946d5a5487cb4ce4a1",
      "license": "MIT",
      "urls": [
        "bzz-raw://086d6a8f670100606dd2e41ddd13d06d6883ed7206348cf1136eea078ddfac11",
        "dweb:/ipfs/QmeWrVFjePvTmBcSGgesiDai1KFtsSugfK1K3j83e4FgNh"
      ]
    },
    "contracts/structs/JB721Tier.sol": {
      "keccak256": "0x5bd4779b619bc3fe3803f0bd4b45b03168e50ba2525e27c61d87369800b12fa8",
      "license": "MIT",
      "urls": [
        "bzz-raw://3ec850e0a94341d4a0b75fe11a20f4bf433b0c84cfc0120570ccffc8d53ca7d5",
        "dweb:/ipfs/QmbrFYswXfCtotRGsWXyqqag8iSrBsoWmCqPKA45Q76ad3"
      ]
    },
    "contracts/structs/JB721TierParams.sol": {
      "keccak256": "0x496c1934772a88fc206d478a8ecc2c0fa59371445738021f6ba251b1dafbf7a7",
      "license": "MIT",
      "urls": [
        "bzz-raw://9e9f7a756899f12491a8fee9c94b76039cc34b36c97e694399751901f9472113",
        "dweb:/ipfs/QmYTGxZ3VstaWhDJL8K1pe96fLWSgXfkwbhbKseKZwZ9E1"
      ]
    },
    "contracts/structs/JBStored721Tier.sol": {
      "keccak256": "0x988e4eec3fef9e2a46ef5ea2cd21b92853136b492f63d86a40fad59489a82ae9",
      "license": "MIT",
      "urls": [
        "bzz-raw://ba8735f0df8558147d03e3ff2964abaeb87e3a39776739c4005fe6e0bd041fb9",
        "dweb:/ipfs/QmSFJuVmyFN3DQTgqfgdV7j9WNLFFarfyh8QwFQEKuBNNU"
      ]
    },
    "contracts/structs/JBTiered721Flags.sol": {
      "keccak256": "0x6f529b8a5b73f5514d097359574390d1222645efcd9492802b3d1084cf173657",
      "license": "MIT",
      "urls": [
        "bzz-raw://608210a08a57abe47bc32e64ceb44461e7cbd8873e1f4e27328176ea0403976a",
        "dweb:/ipfs/Qmf217hxfuZJXDbXAt5Kd6SqfEDfPPZ8spx2Z3xYMrKnHK"
      ]
    },
    "contracts/structs/JBTiered721FundingCycleMetadata.sol": {
      "keccak256": "0x3b1e034b0de94cd2fb43a55212e42b2800a45fd75de85dc3431e4dc1734a09a0",
      "license": "MIT",
      "urls": [
        "bzz-raw://76f3022efa98a734e61320f533c1d6e76ef35f5a708bb204ca5e9c0bb27b0fb5",
        "dweb:/ipfs/QmajUxHeji6DCvwKQTaDTyLzJDLJQgquGEc7x3ixLeyJVL"
      ]
    },
    "contracts/structs/JBTiered721MintReservesForTiersData.sol": {
      "keccak256": "0xc04c71a3bbf7daad10971d9507c123e22e5996c4b1497c05deff1c0d6d59b9d0",
      "license": "MIT",
      "urls": [
        "bzz-raw://0e93c80696a98d57053462a156be6f8290ee931666b77f6ff97df4bb2a3b0cc1",
        "dweb:/ipfs/QmZUqXnsaYMz4orNoQ3ybm2So1sHA7qQ46jxu4QRMhFTsq"
      ]
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
      "license": "GPL-3.0-or-later",
      "urls": [
        "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
        "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
      ]
    },
    "lib/forge-std/src/Script.sol": {
      "keccak256": "0x4424dbcb8f5b741475445726f87408fcd89951fad973bec2ca442ee157f910e7",
      "license": "MIT",
      "urls": [
        "bzz-raw://5b0b9f6dfb69245d8f888558ae82bf1d2cdeace46201444fe4b2e6a5283f944a",
        "dweb:/ipfs/QmWFSKeFEZngNcwNn7A84EF7pASo5qe6r5oK24r9Kwca7Z"
      ]
    },
    "lib/forge-std/src/Test.sol": {
      "keccak256": "0x5d84dd1e27d9127431d6f9aaeb681227235f2b0285545384d1dc236cbcab1364",
      "license": "MIT",
      "urls": [
        "bzz-raw://6fe33b19854be51975ae89d4f4d3074a8b4bbd3c0e4dc5befe84d165f7462b55",
        "dweb:/ipfs/Qma45Q6fvwpmke2rdPdZapNqjXv17ReoT4xp4Tnj1JdBd7"
      ]
    },
    "lib/forge-std/src/Vm.sol": {
      "keccak256": "0x63fc2487cf3a6650d933e18bcb61766f15f74c327192381806ea00f8f6446f66",
      "license": "MIT",
      "urls": [
        "bzz-raw://aad99f7b2ed3b11ff6c17b84b4196c562898640a80cabc2c28c87c116099a00f",
        "dweb:/ipfs/QmQNNbxHabRycegyXwJWBDutrdcScAP2SU5zEvorWEaFpx"
      ]
    },
    "lib/forge-std/src/console.sol": {
      "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
      "license": "MIT",
      "urls": [
        "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
        "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
      ]
    },
    "lib/forge-std/src/console2.sol": {
      "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
      "license": "MIT",
      "urls": [
        "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
        "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/enums/JBBallotState.sol": {
      "keccak256": "0x891fcac63470398b3a11239da7feba6b07d640809fcefd2404303b823d7378f8",
      "license": "MIT",
      "urls": [
        "bzz-raw://6e6adfceaf284b669a8c1cbcf2da7f18ab31a2d1066f9db8bc914349e7401de7",
        "dweb:/ipfs/QmXLHVRPPZdXUkgAHQbHUtEzAvCJk1P6rJ7wrwfTcfW6fw"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBDirectory.sol": {
      "keccak256": "0x715321646db00514d1355ed43c40cd3f01e94959552fd07797b315d9c49cdb1d",
      "license": "MIT",
      "urls": [
        "bzz-raw://c34c9e1c727ffc63dd42fb6e6ffb3116c8ba15d6a322a300f10f29478974768d",
        "dweb:/ipfs/QmYToaGrbMyyWAuyepYcDd8M6KcmosY8AWhT3uJmPM6Pvy"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBFundingCycleBallot.sol": {
      "keccak256": "0x49553a56209237846bc400cf27f260824a6bd06fd8094a7eb5abb9de75779598",
      "license": "MIT",
      "urls": [
        "bzz-raw://559372746f94f28b385bc336df263f583dca5377350645c0b28110b083bdb41a",
        "dweb:/ipfs/QmeQRYqPjXBQCtMKXSFtHVD2ewEPoUAPDxLh4oWTRSKbmx"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBFundingCycleDataSource.sol": {
      "keccak256": "0xa424abc146a61b69db83e511c064492da6fab6d8226e13d1580bc9fbc50d6738",
      "license": "MIT",
      "urls": [
        "bzz-raw://59c695ee79b9cd5447b83acb07c92627d747c6e6901e9145671c7ff12602f4c8",
        "dweb:/ipfs/Qma43bK5qkRkcWP9KNwfZ54WuMJsT2TAYfMXkdT1R7vRoK"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBFundingCycleStore.sol": {
      "keccak256": "0xaead823851433be0c2ddc8f8086813e6cd647de3a1bc0f7570a5d6b38c378b5a",
      "license": "MIT",
      "urls": [
        "bzz-raw://7f11fd52ba9ef67b40811d8a2298ae8b69447d2565b3f1069cbb8f0f13bc65e7",
        "dweb:/ipfs/QmVbBzpTxZWar9xvj6x1vW91hJDv2iPVq7aG6waMxaHUPQ"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBPayDelegate.sol": {
      "keccak256": "0xa797de18b69eceba117e1f0b3810cf3cc2d2791417d580a5bdc510d1b868ab26",
      "license": "MIT",
      "urls": [
        "bzz-raw://36b214c091c62c54d22cbedb606c29919cb56f1c29acf9c397c948247a29dcc0",
        "dweb:/ipfs/QmSzxHs8xNFqNfxZb1igvPHk7vXA5vUsGQ6AMfJ8jx8Ktu"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBPaymentTerminal.sol": {
      "keccak256": "0xb7826f5ed609359ce322c09e83236c47ba385df1c3cad3607e56fd0a2e00eee2",
      "license": "MIT",
      "urls": [
        "bzz-raw://cbb0de0e73f73a04fcfc8f08cab3588b6d608cf5268af737cff6a530f6062c95",
        "dweb:/ipfs/QmPGb8aEbZNHNnrCvuGH52RLvV3kjL3agxQiFrjHoLHaup"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBProjects.sol": {
      "keccak256": "0x7cfc021d0bd7e73b1ba8f4845d7d35e3419d6a14d3d25ca3a8010e7f91062fe4",
      "license": "MIT",
      "urls": [
        "bzz-raw://ff265e13e60da56b93104260ed69ab01153437ec2af9d453781f22ca295eaef9",
        "dweb:/ipfs/QmfGCSLX2Wy26ojf4U12udsdtjSSacbLcZGwCjTw7MjWF8"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBRedemptionDelegate.sol": {
      "keccak256": "0x172d2c0be65e72e54f71ae521907067f0fa30e8ca05c4f88826903208aa437e2",
      "license": "MIT",
      "urls": [
        "bzz-raw://266a32bd8feea10051a4e243e14692c62e99de7048cda2f541998b4cc64cbd51",
        "dweb:/ipfs/QmPfqsbSZdpQee4WbisK9ZnZRrXbUVvSpbfnrEKGfjzz9N"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/interfaces/IJBTokenUriResolver.sol": {
      "keccak256": "0xd267fd8ca7c21c2c71794acdb9a98314c33a35fc559e0bf0897a6686d196d174",
      "license": "MIT",
      "urls": [
        "bzz-raw://aa7053d4300ed1374f3f993e6e2163d0a05ee780e4e99eb007b55eabc93c724e",
        "dweb:/ipfs/QmYZAUn7VCwqpDWYZNCXLNYMRQpD334YgPRiGCfxQApzuT"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBConstants.sol": {
      "keccak256": "0x34362846a1cd428a8bdedf4ab6857e11402f345cb87b994b2e7fb6d2474b808d",
      "license": "MIT",
      "urls": [
        "bzz-raw://80b423d29251e6d6cc6bd24b89474628ebcd588fbf485da714134e449e002264",
        "dweb:/ipfs/QmVBKR4eLMfJRHJLxEJJJQiYEgkoXK6kK6HyFy7mQ9Wx6d"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBCurrencies.sol": {
      "keccak256": "0x7e417ff25c173608ee4fe6d9fc3dcd5e1458c78c889af12bac47b1189a436076",
      "license": "MIT",
      "urls": [
        "bzz-raw://92a96ba0dfa74f968db8d5f367c92a8c7e616c70cafab3b6d7f049e43b501e84",
        "dweb:/ipfs/QmdJHS7yVcXjTzN82LjNZp77uzYZPL3951NWit4i36pN7Q"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBFundingCycleMetadataResolver.sol": {
      "keccak256": "0x3d045c38593102cfb6ac67f3ddf2232e1ff5518d6d021423ae2681387599fbd3",
      "license": "MIT",
      "urls": [
        "bzz-raw://a3ed08bbad9868881b87258ecb34b6b5a4fe83e321e5f59c66a758180077135e",
        "dweb:/ipfs/QmbVDpmk4VvunFqpkmsEqX8VomEbsXpRebv841dHRBpy63"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBGlobalFundingCycleMetadataResolver.sol": {
      "keccak256": "0x0d998f938026edeb755987a79421267cf860801161b5f171206a200b60f1061f",
      "license": "MIT",
      "urls": [
        "bzz-raw://d2ff895bbf2f18fe6538abe53966acd8ea128795283209bb8402ac72ddd529b1",
        "dweb:/ipfs/QmZgU8rokY5sBQ2guFmPotGh4e8ReNHAyZzRhZXrN9a8EP"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/libraries/JBTokens.sol": {
      "keccak256": "0xecf82992f7b827766aa55f16872517a646521eef414d8cc9786617ea377e5463",
      "license": "MIT",
      "urls": [
        "bzz-raw://4bb334faa6d2d071473bfcd7efeb5bfa068c340600c204651d59a94be4e4b147",
        "dweb:/ipfs/QmaKgSCvDNgQ6dh2gZfQ9VhkPuRCoACv8e7sd1K9VFikix"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBDidPayData.sol": {
      "keccak256": "0xf3c664309b37790f16047ae97b0459889ae0242dfcde7fc8902c8d10c7f8e6b6",
      "license": "MIT",
      "urls": [
        "bzz-raw://ea74b762604ffa0e45181d8ec31b130198546014f6360d15076af79952bc5874",
        "dweb:/ipfs/QmdukMbucvU75BpK4TsYKoqjpQ2Nhs9yjFVzcKGkG3SpSV"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBDidRedeemData.sol": {
      "keccak256": "0xe2c401f39723a7ce915b8bef328744c66daaf57460843964b941456c2258a412",
      "license": "MIT",
      "urls": [
        "bzz-raw://c3bddd802ff895aa54f047d2385c7c253f9e0cd5b23d4d84439c1590e7e66ccb",
        "dweb:/ipfs/QmXdSDWgEWMtJDqMhHrBCZnBM4qETXRPteB1wEGZBRxuUb"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundingCycle.sol": {
      "keccak256": "0xcdd3ac9b6fa67e62ada88d09b73bc35ade1cd77d43db712289266a788928b4c2",
      "license": "MIT",
      "urls": [
        "bzz-raw://8ba0be407022bbeb0e9272884653209ee262b8a4e00ffbba1298c3b119feccba",
        "dweb:/ipfs/QmbtLQzSN3hut4jYVsYPiYDfRkDdGkZmTWBnV2wJKrdM3K"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundingCycleData.sol": {
      "keccak256": "0x2aa6368bf4dfc5797e8b02a978293de0c777fae2658de2c825a103587240f3b0",
      "license": "MIT",
      "urls": [
        "bzz-raw://2d7a980ab9b67ad1569d4407b747903cab668a332214117f5ad44feb50af0a3a",
        "dweb:/ipfs/QmSuEzmrmDSihrTKYCk8miq7VQi7WD6jmQePkjDyzt7UpC"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBFundingCycleMetadata.sol": {
      "keccak256": "0x783604440cac8d176332eab28166f188ee5c230378c08cfc95fea4f7187dc77d",
      "license": "MIT",
      "urls": [
        "bzz-raw://81409f9675aabd5ece88efbf08d1acb5581c2aac5b6394824f575f5f2edb5788",
        "dweb:/ipfs/QmPWdUztAEssCEnuFFkj74kNFEfVUxbNFmD5GmVB2Qvj1h"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBGlobalFundingCycleMetadata.sol": {
      "keccak256": "0x05d85530305fec6d6eca54cdbc2cd9110cbda0146598032b0203aa4b622944ff",
      "license": "MIT",
      "urls": [
        "bzz-raw://ec56eff6784c7b60ebc3098037573d8ece138794a9a58ebe8412e75927e984cd",
        "dweb:/ipfs/QmdkEeE6JDyCiV3YBKf7h3FymEHCAHHAtBokUkJwFWVPSf"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBPayDelegateAllocation.sol": {
      "keccak256": "0xb4e558dc62231d89e9b48998012577d22c3e52b58e23401f22d9096827f6ea0c",
      "license": "MIT",
      "urls": [
        "bzz-raw://b6617a7479709d2a68fbc6686c9087fd7339ffcbb4823010287eb2ad979f23dd",
        "dweb:/ipfs/QmVT66SXpY9h5sD8nJq7VALbfWdeHwUxAeBPymaHg1TMNM"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBPayParamsData.sol": {
      "keccak256": "0x05007b26feb5d9a026b883c6d734a341b5a49ef7b8215fb40507882e2c14e24d",
      "license": "MIT",
      "urls": [
        "bzz-raw://52ef2d3c61f06243aead9afcb043299f362ff9f7b259386a88c4454b429436c0",
        "dweb:/ipfs/QmVpCJ1NyBGBDgNQpmojhjPmqx2gryzopGLgawHE26mwPr"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBProjectMetadata.sol": {
      "keccak256": "0x90ad7b1014c0a9f945fe7a2efde9d5de41e40574fa27969070b1d2ff52033ea0",
      "license": "MIT",
      "urls": [
        "bzz-raw://1fafc65a9fd74605b7d6c6f0a92b3237a8e3efdd160affb8c117bad00dcf9494",
        "dweb:/ipfs/QmQkcVt11WLqrxHVrcDCF6dNxzg2kKHEghAgSbfLF6CHkt"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBRedeemParamsData.sol": {
      "keccak256": "0x5065a824ebb34952f016c6dfa47e8a7ac28427b719470e74a41022c11ace7788",
      "license": "MIT",
      "urls": [
        "bzz-raw://0006b9aeb387a8866d9f619de374d7618159e6a25d562f2c8fca984e2a4b9fea",
        "dweb:/ipfs/QmUfWBMHx6CxN921vM5RktJTP5AYEA3v2xpnMX5LGubhBC"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBRedemptionDelegateAllocation.sol": {
      "keccak256": "0x10c29d33dd0d875a0d4692a2b9a9355c2ebf433cc06a9a60253d4366b60d4d31",
      "license": "MIT",
      "urls": [
        "bzz-raw://76614755cf61b78b3d3263ddcbf7c7146986374e4cdf5cc2abb67c523d957142",
        "dweb:/ipfs/QmVNGDmTCcfYxgbA83yURstmAU7vtAtjTh9zNFRwKMmTH1"
      ]
    },
    "node_modules/@jbx-protocol/juice-contracts-v3/contracts/structs/JBTokenAmount.sol": {
      "keccak256": "0x4a778e779ba257ba5638c5469e07a4d21b55a3128d56db5a0fdfacb1f3301c51",
      "license": "MIT",
      "urls": [
        "bzz-raw://fdb8302e06c5b4e1e91d204ed735d8d5db5bb3648200c144d7c545678010a44d",
        "dweb:/ipfs/QmTpffbt3FShkk8LDjsonVGnecbbNMUL8QHYQM7AFcMa54"
      ]
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
      "license": "MIT",
      "urls": [
        "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
        "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
      ]
    },
    "node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol": {
      "keccak256": "0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0",
      "license": "MIT",
      "urls": [
        "bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86",
        "dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
      "license": "MIT",
      "urls": [
        "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
        "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
      "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
      "license": "MIT",
      "urls": [
        "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
        "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
      "license": "MIT",
      "urls": [
        "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
        "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
      "license": "MIT",
      "urls": [
        "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
        "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Checkpoints.sol": {
      "keccak256": "0x2e109f03a05809288a1478d4d9fcd0804229207e18d1164ce0597fb0958a159c",
      "license": "MIT",
      "urls": [
        "bzz-raw://d9495415607fcbd1c940e726f396c46892af8c8772247c002650deacaf5199fb",
        "dweb:/ipfs/QmagLfEk1NCaJEMVDP3ix9BmXy6mccVUMfKAbWQFtjkjvJ"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
      "license": "MIT",
      "urls": [
        "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
        "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
      "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
      "license": "MIT",
      "urls": [
        "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
        "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
      "license": "MIT",
      "urls": [
        "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
        "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
      "keccak256": "0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481",
      "license": "MIT",
      "urls": [
        "bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f",
        "dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol": {
      "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
      "license": "MIT",
      "urls": [
        "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
        "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
      "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
      "license": "MIT",
      "urls": [
        "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
        "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
      "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
      "license": "MIT",
      "urls": [
        "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
        "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
      "keccak256": "0x02686c31ccb9ee77a299fa5f47327af5271f251a707a0e24f321957166ff0434",
      "license": "MIT",
      "urls": [
        "bzz-raw://cb562d8ae1da31249ca0d8553df9f89ef4c3c110a018c4449dde68ae30e51ec1",
        "dweb:/ipfs/QmUwxjtTUYB89ymeV46TZPmTsGnYrKNcgTHk7MQA1MG3hj"
      ]
    },
    "node_modules/@paulrberg/contracts/math/PRBMath.sol": {
      "keccak256": "0x42821345981bc0434a90ba2268a2f5278dfe9e38166981d72fc7f3b776a29495",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://92f28eea1e22d4e7998617483eef42d89eb97b364414cf41041c86aa633d3b47",
        "dweb:/ipfs/QmT5entVZFjbb3ZGZZvNAGqtwerCgwjCfN1Qmvf8jKPBXj"
      ]
    },
    "node_modules/prb-math/contracts/PRBMath.sol": {
      "keccak256": "0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://3ba3ad78675323279adfc09038eaa14f4cde3f3173e5d2d60b9c30bf7099aa7b",
        "dweb:/ipfs/QmV56KGJZQG681hwd7JQDv3KjAa9JSGF88ShGx8YBCuvcR"
      ]
    }
  },
  "version": 1
}